#!/bin/sh

urlfilter_black()
{
mchain="Urlfilter_black"
iptables -t filter -N $mchain >/dev/null 2>&1
iptables -t filter -F $mchain >/dev/null 2>&1
urllist=`/sbin/uci -q get sets.urlfilter.url`
for url in `echo $urllist` ;do
    iplist=`nslookup $url 2>/dev/null | grep Address | grep localhost -v | sed 's/Address [0-9]: //g' | tr -s '\n' ' '`
    for ip in `echo $iplist` ;do
    iptables -t filter -I $mchain -d $ip -p tcp -m multiport --dports 80,443 -j DROP
    done 
done
inlan=$(iptables -t filter -L FORWARD  | grep $mchain)
if [ "" == "$inlan" ]; then
    iptables -t filter -I FORWARD 1 -j $mchain
fi
echo 1 > /proc/sys/net/bridge/bridge-nf-call-iptables
}

urlfilter_white()
{
mchain="Urlfilter_white"
iptables -t filter -N $mchain >/dev/null 2>&1
iptables -t filter -F $mchain >/dev/null 2>&1
urllist=`/sbin/uci -q get sets.urlfilter.url`
authser=`/sbin/uci -q get wifidog.wifidog.gateway_hostname`
wifidog_whitelist=`/sbin/uci -q get wifidog.wifidog.whitelist`
urllist="$urllist"" $authser"" $wifidog_whitelist"
for url in `echo $urllist` ;do
    iplist=`nslookup $url 2>/dev/null | grep Address | grep localhost -v | sed 's/Address [0-9]: //g' | tr -s '\n' ' '`
    for ip in `echo $iplist` ;do
    iptables -t filter -I $mchain -d $ip -p tcp -m multiport --dports 80,443 -j ACCEPT
    done 
done
inlan=$(iptables -t filter -L FORWARD  | grep $mchain)
if [ "" == "$inlan" ]; then
    iptables -t filter -I FORWARD 1 -j $mchain
fi
iptables -t filter -A $mchain -p tcp -m multiport --dports 80,443 -j DROP
echo 1 > /proc/sys/net/bridge/bridge-nf-call-iptables
}

urlfilter_clean()
{
mchain_list="Urlfilter_white Urlfilter_black"
for mchain in `echo $mchain_list`;do
    iptables -t filter -F $mchain >/dev/null 2>&1
    inlan=$(iptables -t filter -L FORWARD  | grep $mchain)
    if [ "" != "$inlan" ]; then
        iptables -t filter -D FORWARD -j $mchain >/dev/null 2>&1
    fi
    iptables -t filter -X $mchain >/dev/null 2>&1
done
}

wait_link(){
islink=""
touch /tmp/urlfilter.pid
while [ "" == "$islink" ] ; do
    if ping -c 2 -W 1 www.baidu.com >/dev/null 2>&1; then
        break
    fi
    sleep 16
done
rm /tmp/urlfilter.pid
}

#exe
if [ "-c" == "$1" ];then
    urlfilter_clean
    exit 0
fi

if [ "-s" == "$1" ];then
    if [ -f /tmp/urlfilter.pid ]; then
        exit 0
    fi 
    urltype=`/sbin/uci -q get sets.urlfilter.type`
    if [ "black" == "$urltype" ]; then
        urlfilter_clean
        wait_link
        urlfilter_black
    elif [ "white" == "$urltype" ]; then
        urlfilter_clean
        wait_link
        urlfilter_white
    fi 
fi

